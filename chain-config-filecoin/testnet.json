[
  {
    "name": "Filecoin",
    "id": "filecoin-2",
    "chainId": 314159,
    "gateway": "0x999117D44220F33e0441fbAb2A5aDB8FF485c54D",
    "rpc": "https://api.calibration.node.glif.io/rpc/v1",
    "constAddressDeployer": "0x98b2920d53612483f91f12ed7754e51b4a77919e",
    "tokenName": "tFil",
    "tokenSymbol": "TFIL",
    "gasReceiver": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "AxelarGasService": {
      "address": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6"
    },
    "AxelarDepositService": {
      "salt": "AxelarDepositService",
      "wrappedSymbol": "",
      "refundIssuer": "0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF",
      "address": "0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955",
      "implementation": "0xb6241272C569767072e0587098415DF6BA0aaEe9",
      "deployer": "0xd55cd98cdE61c3CcE1286F9aF50cDbF16f5dba5b"
    },
    "GMPExpressService": {
      "expressOperator": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
      "proxyDeployer": "0xfFCd49a08cda2FdF89713BFE9AE4c7355087EF58",
      "salt": "GMPExpressService",
      "address": "0xfb72239394647e97894585D0D93Ca91f6C3852a4",
      "implementation": "0xF12D145c6aA170deEd2158cC33445425A7D47694",
      "deployer": "0xA57ADCE1d2fE72949E4308867D894CD7E7DE0ef2"
    },
    "gasOptions": {
      "gasLimit": 2000000000
    },
    "gasService": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasReciever_)",
        "error ActorError(int256 errorCode)",
        "error ActorNotFound()",
        "error FailToCallActor()",
        "error InvalidAddress()",
        "error InvalidAddress()",
        "error InvalidCodec(uint64)",
        "error InvalidResponseLength()",
        "error NegativeValueNotAllowed()",
        "error NotApprovedByGateway()",
        "error NotEnoughBalance(uint256 balance, uint256 value)",
        "event DealProposalCreate(bytes32 indexed id, uint64 size, bool indexed verified, uint256 price)",
        "event ReceivedDataCap(string received)",
        "function AUTHENTICATE_MESSAGE_METHOD_NUM() view returns (uint64)",
        "function DATACAP_ACTOR_ETH_ADDRESS() view returns (address)",
        "function DATACAP_RECEIVER_HOOK_METHOD_NUM() view returns (uint64)",
        "function MARKET_ACTOR_ETH_ADDRESS() view returns (address)",
        "function MARKET_NOTIFY_DEAL_METHOD_NUM() view returns (uint64)",
        "function addBalance(uint256 value)",
        "function dealRequestIdx(bytes32) view returns (uint256 idx, bool valid)",
        "function dealRequests(uint256) view returns (bytes piece_cid, uint64 piece_size, bool verified_deal, string label, int64 start_epoch, int64 end_epoch, uint256 storage_price_per_epoch, uint256 provider_collateral, uint256 client_collateral, uint64 extra_params_version, tuple(string location_ref, uint64 car_size, bool skip_ipni_announce, bool remove_unsealed_copy) extra_params)",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getDealProposal(bytes32 proposalId) view returns (bytes)",
        "function getExtraParams(bytes32 proposalId) view returns (bytes extra_params)",
        "function handle_filecoin_method(uint64 method, uint64, bytes params) returns (uint32, uint64, bytes)",
        "function makeBatchDealProposal(tuple(bytes piece_cid, uint64 piece_size, bool verified_deal, string label, int64 start_epoch, int64 end_epoch, uint256 storage_price_per_epoch, uint256 provider_collateral, uint256 client_collateral, uint64 extra_params_version, tuple(string location_ref, uint64 car_size, bool skip_ipni_announce, bool remove_unsealed_copy) extra_params)[] deals) returns (bytes32[])",
        "function makeDealProposal(tuple(bytes piece_cid, uint64 piece_size, bool verified_deal, string label, int64 start_epoch, int64 end_epoch, uint256 storage_price_per_epoch, uint256 provider_collateral, uint256 client_collateral, uint64 extra_params_version, tuple(string location_ref, uint64 car_size, bool skip_ipni_announce, bool remove_unsealed_copy) extra_params) deal) returns (bytes32)",
        "function owner() view returns (address)",
        "function pieceDeals(bytes) view returns (uint64)",
        "function pieceProviders(bytes) view returns (bytes provider, bool valid)",
        "function pieceRequests(bytes) view returns (bytes32 requestId, bool valid)",
        "function pieceStatus(bytes) view returns (uint8)",
        "function updateActivationStatus(bytes pieceCid)",
        "function withdrawBalance(address client, uint256 value) returns (uint256)"
      ],
      "address": "0x4bAF83779710ca022376f5c1136Fe346834B4952"
    }
  }
]
